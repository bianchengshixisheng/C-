#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
#include <string.h>
#include <windows.h>

//for循环的变种二
//int main()
//{
//	int x,y;
//	for ( x=0,y=0;x<2 && y<5;++x,y++ )
//		printf("hhhhh\n");
//	return 0;
//}

//do..whlie循环  循环的特点：循环至少执行一次
//int main()
//{
//	int i=10;
//	do
//		printf("%d\n",i);
//	while(i<10);
//	return 0;
//}



//计算:1!+2!+3!+...+10!的和
//int main()
//{
//	int i = 0;
//	int n = 0;
//	int ret = 0;
//	int sum = 0;
//	for (i=1;i<=10;i++)
//	{
//		ret = 1;
//		for (i=1;i<=n;i++)
//		{
//			ret = ret * i;
//		}
//		sum =sum +ret;
//	}
//	printf("%d\n",sum);
//	return 0;
//}


//向中间依次覆盖

//
//int main()
//{
//	char arr1[]="welcom to bit!!!!!!!!!";
//	char arr2[]="######################";
//	int left = 0;
//	int right = strlen();
//	while (left<=right)
//	{
//		arr2[left]=arr1[left];
//		arr2[right]=arr1[right];
//		printf("%s\n",arr2);
//		Sleep(1000);
//		system("cls");
//		left++;
//		right++;
//	}
//	return 0;
//}


//在数组中寻找某一个值
//int main()
//{
//	int arr[]={1,2,3,4,5,6,7,8,9,10};
//	int k = 7;
//	int i = 0;
//	int sz = sizeof(arr)/sizeof(arr[0]);
//	for(i = 0;i<sz;i++)
//	{
//		if(k==arr[i])
//		{
//			printf("找到了,下标是%d\n",i);
//			break;
//		}
//	}
//	if(i==sz)
//		printf("找不到");
//	return 0;
//}
